"""
The root query definition
"""
type Query {
  " get the user of the currently logged in user using the authentication headers "
  userDetails: UserDetailsPayload!
  " to get the information of a particular user corresponding to their `id` "
  userProfileDetails(usernameSlug: String!): UserProfileDetailsPayload!
  " get all users in the database "
  getUsersList: [User!]
}

"""
The root mutation definition
"""
type Mutation {
  getAuthToken(identifier: String!, password: String!): AuthTokenPayload!
  deleteAuthToken(token: String!): DeleteTokenPayload!

  " create a new user with the supplied username and password "
  createUser(data: CreateUserInput!): CreateUserPayload!
  " create a new habit for an authenticated user using the supplied data "
  createDailyHabit(data: CreateHabitInput!): CreateHabitPayload!
}
