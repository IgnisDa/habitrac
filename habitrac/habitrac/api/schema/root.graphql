"""
The root query definition
"""
type Query {
  " get the user of the currently logged in user using the authentication headers "
  userDetails: UserDetailsPayload!
  " to get the information of a particular user corresponding to their `id` "
  userProfileDetails(usernameSlug: String!): UserProfileDetailsPayload!
  " get all users in the database "
  getUsersList: [User!]
  " get all habits registered by a user "
  getAllHabits(usernameSlug: String!): [Habit!]
  " get the details of a habit for a particular user "
  getHabitDetails(nameSlug: String!): HabitDetailsPayload!
  " get the report about a particular habit "
  getHabitReport(nameSlug: String!): HabitReport!
  " get details about the currently logged in user "
  getUserReport: UserReport!
}

"""
The root mutation definition
"""
type Mutation {
  getAuthToken(identifier: String!, password: String!): AuthTokenPayload!
  deleteAuthToken(token: String!): DeleteTokenPayload!

  " create a new user with the supplied username and password "
  createUser(data: CreateUserInput!): CreateUserPayload!
  " create a new habit for an authenticated user using the supplied data "
  createDailyHabit(data: CreateHabitInput!): CreateHabitPayload!
  " toggle a habit cycle as done or not-done "
  toggleTagCycle(data: ToggleTagCycleInput!): ToggleTagCyclePayload!
  " update a daily habit for the authenticated user using the supplied data "
  updateDailyHabit(
    data: CreateHabitInput!
    nameSlug: String!
  ): UpdateHabitPayload!
  " delete a habit from the database "
  deleteHabit(nameSlug: String!): ToggleTagCyclePayload!
  " set a vault password for the authenticated user associated with the request "
  setVaultPassword(password: String!): ToggleTagCyclePayload!
}
